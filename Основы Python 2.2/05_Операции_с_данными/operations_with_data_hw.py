# Задача 1: Определение количества полных килограмм в заданном числе грамм
#
# Описание:
# Напишите программу, которая определяет, сколько полных килограмм содержится в заданном весе, выраженном в граммах.
#
# Требования:
# - Объявите переменную для хранения количества грамм (например, grams = 12345).
# - Вычислите количество полных килограмм.
# - Выведите результат с помощью функции print().
#
# Пример:
# Если задано grams = 12345, то программа должна вычислить:
# full_kilograms = 12
#
# Вывод результата: "В 12345 граммах содержится 12 полных килограмм."

grams = 12345
full_kilograms = grams // 1000
print(f"В {grams} граммах содержится {full_kilograms} полных килограмм.")

#----------------------------------------------------------------------------------------------------------------------------------------------------
# Задача 2: Вывести последнюю цифру числа
#
# Описание:
# Напишите программу, которая на основе заданного числа выводит его последнюю цифру.
#
# Требования:
# - Объявите переменную для хранения числа (например, number = 1234).
# - Найдите последнюю цифру числа.
# - Выведите результат с помощью функции print().
#
# Пример:
# Если задано number = 1234, то программа должна вычислить: last_digit = 4
#
# Вывод результата: "Последняя цифра числа 1234: 4"

number = 1234
last_digit = number % 10
print(f'Последняя цифра числа {number}: {last_digit}')

#----------------------------------------------------------------------------------------------------------------------------------------------------
# Задача 3: Определение, является ли число положительным и чётным
#
# Описание:
# Напишите программу, которая проверяет, является ли заданное число одновременно положительным и чётным. Для этого используйте операторы сравнения и логическую операцию и (and).
#
# Требования:
# - Объявите переменную для хранения числа, например, number1 = 14.
# - Проверьте, что число больше нуля.
# - Проверьте, что число делится на 2 без остатка.
# - Используйте логическую операцию и для комбинирования условий.
# - Выведите соответствующее сообщение о том, является ли число положительным и чётным.
#
# Пример:
# - Для number1 = 14 должно получиться:
# "Число 14 является положительным и чётным."
# - Для number2 = -4 должно получиться:
# "Число -4 не подходит под условия."
# - Для number3 = 15 должно получиться:
# "Число 15 не подходит под условия."

number1 = 14 #можно ввести int(input()) чтобы повторить примеры
if number1 > 0 and number1 % 2 == 0:
    print(f"Число {number1} является положительным и чётным.")
else:
    print(f"Число {number1} не подходит под условия")

#----------------------------------------------------------------------------------------------------------------------------------------------------
# Задача 4: Определение, выходит ли число за допустимый диапазон
#
# Описание:
# Напишите программу, которая проверяет, выходит ли заданное число за допустимый диапазон от 0 до 100. Если число меньше 0 или больше 100, то оно считается выходящим за диапазон.
#
# Требования:
# - Объявите переменную для хранения числа, например, num = 150.
# - Используя операторы сравнения, проверьте, что число меньше 0 или больше 100.
# - Если условие истинно, выведите сообщение, что число находится за пределами диапазона, иначе — что число в пределах допустимого диапазона.
#
# Пример:
# - Для num1 = 150 программа должна вывести:
# "Число 150 выходит за пределы диапазона от 0 до 100."
# - Для num2 = 50 программа должна вывести:
# "Число 50 находится в пределах диапазона от 0 до 100."

num = 150
if num < 0 or num > 100:
    print(f"Число {num} выходит за пределы диапазона от 0 до 100.")
else:
    print(f"Число {num} находится в пределах диапазона от 0 до 100.")

#----------------------------------------------------------------------------------------------------------------------------------------------------
# Задача 5: Проверка, что число НЕ кратно 3
#
# Описание:
# Напишите программу, которая определяет, не является ли заданное число кратным 3.
#
# Требования:
# - Объявите переменную для хранения числа, например, number = 10.
# - Проверьте с помощью условия not или !=, что число не делится на 3 без остатка.
# - Выведите сообщение, что число не кратно 3, если условие выполняется, или, наоборот, сообщение, что число кратно 3, если условие ложно.
#
# Пример:
# - Если number1 = 10, программа должна вывести: "Число 10 не кратно 3."
# - Если number2 = 9, выведите: "Число 9 кратно 3."
#
# Проделанную работу выложите в свой репозитория на GIT и скиньте ссылку в
# Trello.

number = int(input())
if number % 3 != 0:
    print(f"Число {number} не кратно 3.")
else:
    print(f"Число {number} кратно 3.")
